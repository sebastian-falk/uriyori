{"version":3,"sources":["Components/Card.tsx","Components/CardList.tsx","Data/Recipe.ts","Data/SubRecipe.ts","API/RecipeCalls.ts","Pages/RecipeOverview/RecipeOverview.tsx","Pages/RecipeDetails/RecipeDetails.tsx","Pages/AddRecipe/AddRecipe.tsx","Pages/NoMatch/NoMatch.tsx","PageRoutes.tsx","NavigationBar.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","title","imgSrc","text","itemUrl","className","style","width","src","alt","undefined","to","CardList","recipes","Object","keys","length","map","rKey","r","description","id","Recipe","subRecipes","this","SubRecipe","ingredients","getAllRecipes","a","subRecipe","recipe","recipeRecord","RecipeOverview","useState","setRecipes","useEffect","fetchedRecipes","asyncGetAllRecipes","RecipeDetails","setRecipe","recipeId","useParams","sr","i","AddRecipe","NoMatch","PageRoutes","path","element","NavigationBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac6311f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({\r\n  title,\r\n  imgSrc,\r\n  text,\r\n  itemUrl,\r\n}: {\r\n  title: string;\r\n  imgSrc?: string;\r\n  text?: string;\r\n  itemUrl?: number | string;\r\n}) => {\r\n  return (\r\n    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n      {imgSrc && <img src={imgSrc} className=\"card-img-top\" alt={title} />}\r\n      {imgSrc === undefined && (\r\n        <img\r\n          src=\"https://previews.123rf.com/images/yitewang/yitewang1602/yitewang160203649/51985697-dinner-food-flat-icon.jpg\"\r\n          className=\"card-img-top\"\r\n          alt={title}\r\n        />\r\n      )}\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <p className=\"card-text\">{text}</p>\r\n        {itemUrl && (\r\n          <Link className=\"btn btn-primary\" to={itemUrl as string}>\r\n            See Details\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport IRecipe from \"../Data/IRecipe\";\r\nimport Recipe from \"../Data/Recipe\";\r\n\r\nconst CardList = ({\r\n  recipes,\r\n}: {\r\n  recipes: Record<number | string, IRecipe>;\r\n}) => {\r\n  if (Object.keys(recipes).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(recipes).map((rKey: string) => {\r\n        let r: Recipe = recipes[rKey];\r\n        return (\r\n          <Card\r\n            title={r.title}\r\n            imgSrc={r.imgSrc}\r\n            text={r.description}\r\n            itemUrl={`recipe/${r.id}`}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import IRecipe from \"./IRecipe\";\r\nimport SubRecipe from \"./SubRecipe\";\r\n\r\nexport default class Recipe implements IRecipe {\r\n  public id: number;\r\n  public title: string;\r\n  public subRecipes: SubRecipe[];\r\n  public imgSrc?: string;\r\n  public description?: string;\r\n\r\n  public constructor(\r\n    id: number,\r\n    title: string,\r\n    subRecipes: SubRecipe[],\r\n    imgSrc?: string,\r\n    description?: string\r\n  ) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.subRecipes = subRecipes;\r\n    this.imgSrc = imgSrc;\r\n    this.description = description;\r\n  }\r\n}\r\n","import ISubRecipe from \"./ISubRecipe\";\r\n\r\nexport default class SubRecipe implements ISubRecipe {\r\n  public id: number;\r\n  public title?: string;\r\n  public ingredients: string[];\r\n  public description: string;\r\n\r\n  public constructor(\r\n    id: number,\r\n    ingredients: string[],\r\n    description: string,\r\n    title?: string\r\n  ) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.ingredients = ingredients;\r\n    this.description = description;\r\n  }\r\n}\r\n","import IRecipe from \"../Data/IRecipe\";\r\nimport Recipe from \"../Data/Recipe\";\r\nimport SubRecipe from \"../Data/SubRecipe\";\r\n\r\nexport async function getAllRecipes(): Promise<\r\n  Record<number | string, IRecipe>\r\n> {\r\n  // TODO call firestore\r\n  let description: string = \"Description text\";\r\n  const ingredients: string[] = [\r\n    \"Mia\",\r\n    \"Garlic\",\r\n    \"Water\",\r\n    \"Minced meat\",\r\n    \"Soy soauce\",\r\n    \"Sesamy oil\",\r\n    \"Salt\",\r\n    \"Peppar\",\r\n  ];\r\n  let subRecipe: SubRecipe = new SubRecipe(1, ingredients, description);\r\n\r\n  var recipe = new Recipe(\r\n    1,\r\n    \"Miagog\",\r\n    [subRecipe],\r\n    undefined,\r\n    \"Yummie soup for birthdays and every other day !\"\r\n  );\r\n\r\n  // TODO change into dictionary before returning\r\n  let recipeRecord: Record<number, IRecipe> = {\r\n    [recipe.id]: recipe,\r\n  };\r\n\r\n  return recipeRecord;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardList from \"../../Components/CardList\";\r\nimport { getAllRecipes } from \"../../API/RecipeCalls\";\r\nimport IRecipe from \"../../Data/IRecipe\";\r\n\r\nconst RecipeOverview = () => {\r\n  const [recipes, setRecipes] = useState<Record<number | string, IRecipe>>({});\r\n\r\n  useEffect(() => {\r\n    const asyncGetAllRecipes = async () => {\r\n      const fetchedRecipes = await getAllRecipes();\r\n      setRecipes(fetchedRecipes);\r\n    };\r\n\r\n    asyncGetAllRecipes();\r\n  }, []);\r\n\r\n  if (Object.keys(recipes).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return <CardList recipes={recipes} />;\r\n};\r\n\r\nexport default RecipeOverview;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getAllRecipes } from \"../../API/RecipeCalls\";\r\nimport Recipe from \"../../Data/Recipe\";\r\nimport SubRecipe from \"../../Data/SubRecipe\";\r\n\r\nconst RecipeDetails = () => {\r\n  const [recipes, setRecipes] = useState<Record<number | string, Recipe>>({});\r\n  const [recipe, setRecipe] = useState<Recipe>();\r\n\r\n  const { recipeId } = useParams<string>();\r\n\r\n  useEffect(() => {\r\n    // TODO fetch from the useReducer instead of making call here again\r\n    const asyncGetAllRecipes = async () => {\r\n      const fetchedRecipes: Record<number | string, Recipe> =\r\n        await getAllRecipes();\r\n      setRecipes(fetchedRecipes);\r\n      setRecipe(fetchedRecipes[recipeId as string]);\r\n    };\r\n    asyncGetAllRecipes();\r\n  }, [recipeId]);\r\n\r\n  if (Object.keys(recipes).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  if (recipe && recipe?.id) {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <h2>{recipe?.title}</h2>\r\n          <img src={recipe?.imgSrc} alt={recipe?.title} />\r\n          {recipe?.description && <div>{recipe?.description}</div>}\r\n        </section>\r\n        {recipe?.subRecipes.map((sr: SubRecipe) => (\r\n          <section>\r\n            {sr.title && <h3>{sr.title}</h3>}\r\n            <div>\r\n              {sr.ingredients.map((i: string) => (\r\n                <ol>\r\n                  <li>{i}</li>\r\n                </ol>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <p>{sr.description}</p>\r\n            </div>\r\n          </section>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React from \"react\";\r\n\r\nconst AddRecipe = () => {\r\n  return <div>AddRecipe</div>;\r\n};\r\n\r\nexport default AddRecipe;\r\n","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return <div>This page does not exist.</div>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router\";\r\n\r\nimport RecipeOverview from \"./Pages/RecipeOverview/RecipeOverview\";\r\nimport RecipeDetails from \"./Pages/RecipeDetails/RecipeDetails\";\r\nimport AddRecipe from \"./Pages/AddRecipe/AddRecipe\";\r\nimport NoMatch from \"./Pages/NoMatch/NoMatch\";\r\n\r\nconst PageRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<RecipeOverview />} />\r\n      <Route path=\"/recipe\" element={<RecipeOverview />} />\r\n      <Route path=\"/recipe/:recipeId\" element={<RecipeDetails />} />\r\n      <Route path=\"/recipe/add\" element={<AddRecipe />} />\r\n\r\n      <Route path=\"*\" element={<NoMatch />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default PageRoutes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav justify-content-center\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/recipe\">\r\n            HOME\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/recipe/add\">\r\n            ADD RECIPE\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from \"react\";\nimport PageRoutes from \"./PageRoutes\";\n\nimport NavigationBar from \"./NavigationBar\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavigationBar />\n        <h1>Sebbecipes</h1>\n      </header>\n      <main>\n        <PageRoutes />\n      </main>\n      {/* <footer>asdf</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}